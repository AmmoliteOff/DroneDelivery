Index: backend/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/backend/src/main/resources/application.properties b/backend/src/main/resources/application.properties
--- a/backend/src/main/resources/application.properties	(revision 7c262e5ed7c0954d19fdc62cc8f79a8fb7d7302e)
+++ b/backend/src/main/resources/application.properties	(date 1698331261528)
@@ -1,1 +1,10 @@
+spring.datasource.url= jdbc:postgresql://localhost:5432/drone_delivery
+spring.datasource.username=postgres
+spring.datasource.password=postgres
+
+spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
+
+spring.jpa.show-sql=true
+spring.jpa.hibernate.ddl-auto=create-drop
 
+spring.security.filter.order=10
\ No newline at end of file
Index: backend/src/main/java/com/hackathon/dronedelivery/DroneDeliveryApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hackathon.dronedelivery;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class DroneDeliveryApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(DroneDeliveryApplication.class, args);\r\n\t}\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/DroneDeliveryApplication.java b/backend/src/main/java/com/hackathon/dronedelivery/DroneDeliveryApplication.java
--- a/backend/src/main/java/com/hackathon/dronedelivery/DroneDeliveryApplication.java	(revision 7c262e5ed7c0954d19fdc62cc8f79a8fb7d7302e)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/DroneDeliveryApplication.java	(date 1698329889404)
@@ -9,6 +9,4 @@
 	public static void main(String[] args) {
 		SpringApplication.run(DroneDeliveryApplication.class, args);
 	}
-
-
 }
Index: backend/src/main/java/com/hackathon/dronedelivery/service/OrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/service/OrderService.java b/backend/src/main/java/com/hackathon/dronedelivery/service/OrderService.java
new file mode 100644
--- /dev/null	(date 1698327295203)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/service/OrderService.java	(date 1698327295203)
@@ -0,0 +1,18 @@
+package com.hackathon.dronedelivery.service;
+
+import com.hackathon.dronedelivery.model.Order;
+import com.hackathon.dronedelivery.repository.OrderRepository;
+import lombok.RequiredArgsConstructor;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+@Service
+@RequiredArgsConstructor
+public class OrderService {
+    public final OrderRepository orderRepository;
+
+    public List<Order> findAll() {
+        return orderRepository.findAll();
+    }
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/model/Notification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/model/Notification.java b/backend/src/main/java/com/hackathon/dronedelivery/model/Notification.java
new file mode 100644
--- /dev/null	(date 1698329889398)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/model/Notification.java	(date 1698329889398)
@@ -0,0 +1,6 @@
+package com.hackathon.dronedelivery.model;
+
+
+public class Notification {
+
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/repository/OrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/repository/OrderRepository.java b/backend/src/main/java/com/hackathon/dronedelivery/repository/OrderRepository.java
new file mode 100644
--- /dev/null	(date 1698327295193)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/repository/OrderRepository.java	(date 1698327295193)
@@ -0,0 +1,7 @@
+package com.hackathon.dronedelivery.repository;
+
+import com.hackathon.dronedelivery.model.Order;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface OrderRepository extends JpaRepository<Order, Long> {
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/repository/UserRepository.java b/backend/src/main/java/com/hackathon/dronedelivery/repository/UserRepository.java
new file mode 100644
--- /dev/null	(date 1698326220271)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/repository/UserRepository.java	(date 1698326220271)
@@ -0,0 +1,7 @@
+package com.hackathon.dronedelivery.repository;
+
+import com.hackathon.dronedelivery.model.User;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface UserRepository extends JpaRepository<User, Long> {
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/service/UserService.java b/backend/src/main/java/com/hackathon/dronedelivery/service/UserService.java
new file mode 100644
--- /dev/null	(date 1698327295181)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/service/UserService.java	(date 1698327295181)
@@ -0,0 +1,13 @@
+package com.hackathon.dronedelivery.service;
+
+import com.hackathon.dronedelivery.repository.UserRepository;
+import lombok.RequiredArgsConstructor;
+import org.springframework.stereotype.Service;
+
+@Service
+@RequiredArgsConstructor
+public class UserService {
+
+    private final UserRepository userRepository;
+
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/service/DroneService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/service/DroneService.java b/backend/src/main/java/com/hackathon/dronedelivery/service/DroneService.java
new file mode 100644
--- /dev/null	(date 1698327295209)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/service/DroneService.java	(date 1698327295209)
@@ -0,0 +1,18 @@
+package com.hackathon.dronedelivery.service;
+
+import com.hackathon.dronedelivery.model.Drone;
+import com.hackathon.dronedelivery.repository.DroneRepository;
+import lombok.RequiredArgsConstructor;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+@Service
+@RequiredArgsConstructor
+public class DroneService {
+    private final DroneRepository droneRepository;
+
+    public List<Drone> findAll() {
+        return droneRepository.findAll();
+    }
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/controller/UserController.java b/backend/src/main/java/com/hackathon/dronedelivery/controller/UserController.java
new file mode 100644
--- /dev/null	(date 1698328219602)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/controller/UserController.java	(date 1698328219602)
@@ -0,0 +1,6 @@
+package com.hackathon.dronedelivery.controller;
+
+import org.springframework.http.ResponseEntity;
+
+public class UserController {
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/controller/DroneController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/controller/DroneController.java b/backend/src/main/java/com/hackathon/dronedelivery/controller/DroneController.java
new file mode 100644
--- /dev/null	(date 1698328638646)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/controller/DroneController.java	(date 1698328638646)
@@ -0,0 +1,25 @@
+package com.hackathon.dronedelivery.controller;
+
+import com.hackathon.dronedelivery.model.Drone;
+
+import com.hackathon.dronedelivery.service.DroneService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.List;
+
+@RestController
+@RequiredArgsConstructor
+@RequestMapping("api")
+public class DroneController {
+
+    private final DroneService droneService;
+
+    @PostMapping("/drones")
+    public ResponseEntity<List<Drone>> getDrones() {
+        return ResponseEntity.ok(droneService.findAll());
+    }
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/repository/DroneRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/repository/DroneRepository.java b/backend/src/main/java/com/hackathon/dronedelivery/repository/DroneRepository.java
new file mode 100644
--- /dev/null	(date 1698326151876)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/repository/DroneRepository.java	(date 1698326151876)
@@ -0,0 +1,7 @@
+package com.hackathon.dronedelivery.repository;
+
+import com.hackathon.dronedelivery.model.Drone;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface DroneRepository extends JpaRepository<Drone, Long> {
+}
Index: backend/src/main/java/com/hackathon/dronedelivery/controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/controller/OrderController.java b/backend/src/main/java/com/hackathon/dronedelivery/controller/OrderController.java
new file mode 100644
--- /dev/null	(date 1698327660052)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/controller/OrderController.java	(date 1698327660052)
@@ -0,0 +1,31 @@
+package com.hackathon.dronedelivery.controller;
+
+import com.hackathon.dronedelivery.model.Notification;
+import com.hackathon.dronedelivery.model.Order;
+import com.hackathon.dronedelivery.service.OrderService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.List;
+
+
+@RestController
+@RequiredArgsConstructor
+@RequestMapping("api")
+public class OrderController {
+
+    private final OrderService orderService;
+
+    @PostMapping("/acceptOrder")
+    public Notification acceptOrder(@RequestBody Order order) {
+        return new Notification();
+    }
+
+    public ResponseEntity<List<Order>> getOrders() {
+        return ResponseEntity.ok(orderService.findAll());
+    }
+}
