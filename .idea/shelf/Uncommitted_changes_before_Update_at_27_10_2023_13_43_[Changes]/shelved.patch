Index: backend/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.url= jdbc:postgresql://localhost:5432/drone_delivery\r\nspring.datasource.username=postgres\r\nspring.datasource.password=postgres\r\n\r\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect\r\n\r\nspring.jpa.show-sql=true\r\nspring.jpa.hibernate.ddl-auto=update\r\n\r\nspring.security.filter.order=10\r\n\r\nserver.port=8756\r\n\r\njwt.secret=Op6WjlPzeSryUVRacnGO7Gt5Csl6pOyeHNiSI7ehNrxyW3Dly2kHsu1V1RtKeREvKYaqbN\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/backend/src/main/resources/application.properties b/backend/src/main/resources/application.properties
--- a/backend/src/main/resources/application.properties	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
+++ b/backend/src/main/resources/application.properties	(date 1698399624727)
@@ -9,6 +9,6 @@
 
 spring.security.filter.order=10
 
-server.port=8756
+server.port=8765
 
 jwt.secret=Op6WjlPzeSryUVRacnGO7Gt5Csl6pOyeHNiSI7ehNrxyW3Dly2kHsu1V1RtKeREvKYaqbN
Index: backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationController.java
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationController.java b/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationController.java
deleted file mode 100644
--- a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationController.java	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
+++ /dev/null	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
@@ -1,40 +0,0 @@
-package com.hackathon.dronedelivery.auth;
-
-
-import com.hackathon.dronedelivery.model.User;
-import com.hackathon.dronedelivery.util.JwtUtil;
-import lombok.RequiredArgsConstructor;
-import org.springframework.http.HttpHeaders;
-
-import org.springframework.http.ResponseEntity;
-import org.springframework.security.core.annotation.AuthenticationPrincipal;
-
-import org.springframework.web.bind.annotation.*;
-
-
-@RestController
-@RequiredArgsConstructor
-@RequestMapping("/api")
-public class AuthenticationController {
-    private final AuthenticationService authenticationService;
-    private final JwtUtil jwtUtil;
-
-    @PostMapping("/register")
-    public ResponseEntity<?> register(@RequestBody RegisterRequest request) {
-        AuthenticationResponse response = authenticationService.register(request);
-        return ResponseEntity.ok().header(HttpHeaders.AUTHORIZATION, String.valueOf(response.getToken())).body(response.getUser());
-    }
-
-    @PostMapping("/authenticate")
-    public ResponseEntity<?> authenticate(
-            @RequestBody AuthenticationRequest request) {
-        AuthenticationResponse response = authenticationService.authenticate(request);
-        return ResponseEntity.ok().header(HttpHeaders.AUTHORIZATION, String.valueOf(response.getToken())).body(response.getUser());
-    }
-
-    @GetMapping("/validate")
-    public ResponseEntity<?> validationToken (@RequestParam("token") String token, @AuthenticationPrincipal User user) {
-        boolean isValidateToken = jwtUtil.isTokenValid(token, user);
-        return ResponseEntity.ok(isValidateToken);
-    }
-}
Index: backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationRequest.java
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationRequest.java b/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationRequest.java
deleted file mode 100644
--- a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationRequest.java	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
+++ /dev/null	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
@@ -1,15 +0,0 @@
-package com.hackathon.dronedelivery.auth;
-
-import lombok.AllArgsConstructor;
-import lombok.Builder;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-@Data
-@Builder
-@NoArgsConstructor
-@AllArgsConstructor
-public class AuthenticationRequest {
-    private String username;
-    private String password;
-}
Index: backend/src/main/java/com/hackathon/dronedelivery/auth/RegisterRequest.java
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/auth/RegisterRequest.java b/backend/src/main/java/com/hackathon/dronedelivery/auth/RegisterRequest.java
deleted file mode 100644
--- a/backend/src/main/java/com/hackathon/dronedelivery/auth/RegisterRequest.java	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
+++ /dev/null	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
@@ -1,19 +0,0 @@
-package com.hackathon.dronedelivery.auth;
-
-import com.hackathon.dronedelivery.enums.Role;
-import lombok.AllArgsConstructor;
-import lombok.Builder;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-@Data
-@Builder
-@NoArgsConstructor
-@AllArgsConstructor
-public class RegisterRequest {
-    private String name;
-    private String surname;
-    private String username;
-    private String password;
-    private Role role;
-}
Index: backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationResponse.java
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationResponse.java b/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationResponse.java
deleted file mode 100644
--- a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationResponse.java	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
+++ /dev/null	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
@@ -1,17 +0,0 @@
-package com.hackathon.dronedelivery.auth;
-
-import com.hackathon.dronedelivery.model.User;
-import lombok.AllArgsConstructor;
-import lombok.Builder;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-@Data
-@Builder
-@NoArgsConstructor
-@AllArgsConstructor
-public class AuthenticationResponse {
-    private String token;
-    private User user;
-
-}
Index: backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationService.java
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationService.java b/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationService.java
deleted file mode 100644
--- a/backend/src/main/java/com/hackathon/dronedelivery/auth/AuthenticationService.java	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
+++ /dev/null	(revision a7545aa99a6450e5ae656e52dd96502757b5bcdd)
@@ -1,59 +0,0 @@
-package com.hackathon.dronedelivery.auth;
-
-import com.hackathon.dronedelivery.model.Authority;
-import com.hackathon.dronedelivery.model.User;
-import com.hackathon.dronedelivery.service.UserService;
-import com.hackathon.dronedelivery.util.JwtUtil;
-import lombok.RequiredArgsConstructor;
-import org.springframework.security.authentication.AuthenticationManager;
-import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
-import org.springframework.security.crypto.password.PasswordEncoder;
-import org.springframework.stereotype.Service;
-
-import java.util.List;
-
-
-@Service
-@RequiredArgsConstructor
-public class AuthenticationService {
-
-    private final UserService userService;
-    private final PasswordEncoder passwordEncoder;
-    private final JwtUtil jwtUtil;
-    private final AuthenticationManager authenticationManager;
-
-    public AuthenticationResponse register(RegisterRequest request) {
-        Authority authority = new Authority(request.getRole());
-        var user = User.builder()
-                .username(request.getUsername())
-                .name(request.getName())
-                .surname(request.getSurname())
-                .password(passwordEncoder.encode(request.getPassword()))
-                .authorities(List.of(authority))
-                .build();
-
-        authority.setUser(user);
-        userService.save(user);
-
-        var jwtToken = jwtUtil.generateToken(user);
-        return AuthenticationResponse.builder()
-                .token(jwtToken)
-                .user(user)
-                .build();
-    }
-
-    public AuthenticationResponse authenticate(AuthenticationRequest request) {
-        var user = userService.findByUsername(request.getUsername()).orElse(null);
-        authenticationManager.authenticate(
-                new UsernamePasswordAuthenticationToken(
-                        request.getUsername(),
-                        request.getPassword()
-                )
-        );
-        var jwtToken = jwtUtil.generateToken(user);
-        return AuthenticationResponse.builder()
-                .token(jwtToken)
-                .user(user)
-                .build();
-    }
-}
Index: backend/src/main/java/com/hackathon/dronedelivery/exception/UserNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/hackathon/dronedelivery/exception/UserNotFoundException.java b/backend/src/main/java/com/hackathon/dronedelivery/exception/UserNotFoundException.java
new file mode 100644
--- /dev/null	(date 1698399624719)
+++ b/backend/src/main/java/com/hackathon/dronedelivery/exception/UserNotFoundException.java	(date 1698399624719)
@@ -0,0 +1,7 @@
+package com.hackathon.dronedelivery.exception;
+
+public class UserNotFoundException extends Exception {
+    public UserNotFoundException(String message) {
+        super(message);
+    }
+}
